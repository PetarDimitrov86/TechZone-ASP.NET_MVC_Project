@model TechZone.Models.ViewModels.Reviews.ReviewDetailsViewModel
@{ViewBag.Title = "Details";}

@section styles {
    <link rel="stylesheet" href="/Content/ReviewDetails.css">
}

<div class="container">
    <div class="row">
        <div class="col-sm-10 col-sm-offset-1">
            <div class="comment-tabs">
                <ul class="nav nav-tabs" role="tablist">
                    <li class="active"><a href="#comments" role="tab" data-toggle="tab"><h4 class="reviews text-capitalize">Comments</h4></a></li>
                    <li><a href="#pictures" role="tab" data-toggle="tab"><h4 class="reviews text-capitalize">Pictures</h4></a></li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane active" id="comments">
                        <ul class="media-list">
                            <li class="media">
                                <a class="pull-left" href="#">
                                    <img class="media-object img-circle" src="@Model.ReviewerImageData" alt="Reviewer Profile Picture">
                                </a>
                                <div class="media-body">
                                    <div class="well well-lg">
                                        <h4 class="media-heading reviews">@Model.ReviewerUsername </h4>
                                        <ul class="media-date reviews list-inline">
                                            <li>@Model.PublishDateString</li>
                                        </ul>
                                        <p class="media-comment">@Model.Content</p>
                                        <a class="btn btn-info btn-circle" href="#post-reply-form" id="reply"><span class="glyphicon glyphicon-share-alt"></span>REPLY</a>
                                        <a class="btn btn-warning btn-circle" data-toggle="collapse" href="#replyOne"><span class="glyphicon glyphicon-comment"></span> @Model.CountOfComments COMMENTS</a>
                                        <div class="pull-right">
                                            @using (Ajax.BeginForm("Vote", null, new AjaxOptions
                                            {
                                                HttpMethod = "post",
                                                OnComplete = "castUpVote()"
                                            }, new { style = "display: inline" }))
                                            {
                                                @Html.HiddenFor(vm => vm.Id)
                                                <input type="hidden" name="vote" value="up"/>
                                                <button type="submit" class="btn btn-success fa fa-thumbs-up">
                                                   <span id="useful">@Model.Useful</span> 
                                                </button>
                                            }
                                            @using (Ajax.BeginForm("Vote", null, new AjaxOptions
                                            {
                                                HttpMethod = "post",
                                                OnComplete = "castDownVote()"
                                            }, new { style = "display: inline" }))
                                            {
                                                @Html.HiddenFor(vm => vm.Id)
                                                <input type="hidden" name="vote" value="down" />
                                                <button type="submit" id="testBtnDown" class="btn btn-danger fa fa-thumbs-down">
                                                    <span id="useless">@Model.Useless</span> 
                                                </button>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="collapse" id="replyOne">
                                    <ul class="media-list">
                                        @foreach (var comment in Model.ReviewComments)
                                        {
                                            <li class="media media-replied">
                                                <div class="col-xs-8 col-sm-8 col-md-8 col-lg-10 col-xs-offset-4 col-sm-offset-4 col-md-offset-4 col-lg-offset-2">
                                                    <div class="media-body">
                                                        <div class="well well-lg">
                                                            <h4 class="media-heading reviews"><span class="glyphicon glyphicon-share-alt"></span> @comment.Commentor</h4>
                                                            <ul class="media-date reviews list-inline">
                                                                <li>@comment.PublishDateString</li>
                                                            </ul>
                                                            <p class="media-comment">@comment.Content</p>
                                                        </div>
                                                    </div>
                                                </div>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            </li>
                        </ul>
                        <div id="post-reply-form">
                            @using (Html.BeginForm("Comment", "Reviews", FormMethod.Post, new {@class = "form-horizontal"}))
                            {
                                @Html.HiddenFor(vm => vm.Id)
                                <div class="form-group">
                                    <label for="comment" class="col-sm-2 control-label">Comment</label>
                                    <div class="col-sm-10">
                                        <textarea class="form-control" name="comment" id="comment" rows="5"></textarea>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-sm-offset-2 col-sm-10">
                                        <button class="btn btn-success btn-circle" type="submit"><span class="glyphicon glyphicon-send"></span>Submit Comment</button>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-sm-offset-2 col-sm-10">
                                        @Html.ValidationSummary("", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function castUpVote() {
            var currentUpVoteCount = $("#useful").text();
            $("#useful").text(Number(currentUpVoteCount) + 1);
        }
        function castDownVote() {
            var currentDownVoteCount = $("#useless").text();
            $("#useless").text(Number(currentDownVoteCount) + 1);
        }
    </script>
}