@using TechZone.Models.Enums
@model TechZone.Models.BindingModels.AddProductBindingModel
@{
    ViewBag.Title = "AddProduct";
}

<style>
input, select, textarea {
    max-width: 480px;
}
</style>

@using (Html.BeginForm("AddProduct", "Control", FormMethod.Post, new { @class = "form-horizontal text-center", role = "form", id = "new-product-form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new product.</h4>
    <hr/>
    <div class="form-group">
        @Html.LabelFor(m => m.Name, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextAreaFor(m => m.Description, new { @class = "form-control", rows = "7" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ImageUrl, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.ImageUrl, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Price, new {@class = "col-md-2 control-label"})
        <div class="col-md-1">
            @Html.TextBoxFor(m => m.Price, new {@class = "form-control"})
        </div>
        @Html.LabelFor(m => m.Quantity, new {@class = "col-md-1 control-label"})
        <div class="col-md-1">
            @Html.TextBoxFor(m => m.Quantity, new {@class = "form-control", type = "number"})
        </div>
        @Html.LabelFor(m => m.Discount, new {@class = "col-md-1 control-label"})
        <div class="col-md-1">
            @Html.TextBoxFor(m => m.Discount, new {@class = "form-control", type = "number"})
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Guarantee, new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            @Html.DropDownListFor(m => m.Guarantee, Enum.GetNames(typeof(GuaranteeDurationType)).Select(e => new SelectListItem { Text =  e.Replace("_", " ") }), new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <label for="product-type" class="control-label col-md-2">Type</label>
        <div class="col-md-2">
            <select name="productType" id="product-type" class="form-control" onchange="loadSpecsInfo(this)">
                <option value="">Product Type...</option>
                <option value="hardDrive">Hard Drive</option>
                <option value="graphicCard">Graphic Card</option>
                <option value="processor">Processor</option>
            </select>
        </div>
    </div>
    <div id="product-specs">
    </div>
    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-6 text-left">
            @Html.ValidationSummary("", new { @class = "text-danger" })
        </div>
    </div>
    <input type="submit" class="btn btn-success" value="Create" />
}

<script>
    function loadSpecsInfo(selectObject) {
        if (selectObject.value == 'hardDrive') {
            $('#new-product-form').attr("action", "/Admin/Control/AddHardDrive");
        }
        if (selectObject.value == 'graphicCard') {
            $('#new-product-form').attr("action", "/Admin/Control/AddGraphicCard");
        }
        if (selectObject.value == 'processor') {
            $('#new-product-form').attr("action", "/Admin/Control/AddProcessor");
        }
        $('#product-specs').load('/Admin/Control/ProductSpecs', { productType: selectObject.value });
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}